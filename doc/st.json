{
  "workbench.preferredDarkColorTheme": "Atom One Dark",
   "workbench.preferredLightColorTheme": "Atom One Dark",
   "workbench.productIconTheme": "icons-carbon",
   "workbench.iconTheme": "file-icons",
   "workbench.fontAliasing": "antialiased",
   "editor.fontFamily": "JetBrains Mono,微软雅黑",
   "editor.fontLigatures": "'ss01', 'ss02', 'ss03', 'ss06', 'zero'",
 
   // Editor
   "editor.fontSize": 22,
   "editor.accessibilitySupport": "off",
   "editor.cursorSmoothCaretAnimation": "on",
   "editor.find.addExtraSpaceOnTop": false,
   "editor.guides.bracketPairs": "active",
   "editor.inlineSuggest.enabled": true,
   "editor.lineNumbers": "interval",
   "editor.multiCursorModifier": "alt",
   "editor.renderWhitespace": "boundary",
   "editor.suggestSelection": "first",
   "editor.unicodeHighlight.invisibleCharacters": false,
   "editor.codeActionsOnSave": {
     "source.fixAll": false,
     "source.fixAll.eslint": true, // this allows ESLint to auto fix on save
     "source.organizeImports": false
   },
   "explorer.confirmDelete": false,
   "explorer.confirmDragAndDrop": false,
   "window.autoDetectColorScheme": true,
   "window.dialogStyle": "custom",
   "window.nativeTabs": true, // this is great, macOS only
   "window.titleBarStyle": "custom",
   "workbench.editor.closeOnFileDelete": true,
   "workbench.editor.highlightModifiedTabs": true,
   "workbench.editor.tabCloseButton": "right",
   "workbench.editor.limit.enabled": true,
   "workbench.editor.limit.perEditorGroup": true,
   "workbench.editor.limit.value": 5,
   "workbench.list.smoothScrolling": true,
   "workbench.sideBar.location": "left",
   "workbench.tree.expandMode": "singleClick",
   "workbench.tree.indent": 10,
   "extensions.autoUpdate": "onlyEnabledExtensions",
   "extensions.ignoreRecommendations": true,
   "files.eol": "\n",
   "files.insertFinalNewline": true,
   "files.simpleDialog.enable": true,
   // AutoSave
   "files.autoSave": "afterDelay",
   "git.autofetch": true,
   "git.confirmSync": false,
   "git.enableSmartCommit": true,
   "git.untrackedChanges": "separate",
   "terminal.integrated.cursorBlinking": true,
   "terminal.integrated.cursorStyle": "line",
   "terminal.integrated.fontWeight": "300",
   "terminal.integrated.persistentSessionReviveProcess": "never",
   "terminal.integrated.tabs.enabled": true,
   "scm.diffDecorationsGutterWidth": 2,
   "debug.onTaskErrors": "debugAnyway",
   "diffEditor.ignoreTrimWhitespace": false,
   "search.exclude": {
     "**/.git": true,
     "**/.github": true,
     "**/.nuxt": true,
     "**/.output": true,
     "**/.pnpm": true,
     "**/.vscode": true,
     "**/.yarn": true,
     "**/bower_components": true,
     "**/dist/**": true,
     "**/logs": true,
     "**/node_modules": true,
     "**/out/**": true,
     "**/package-lock.json": true,
     "**/pnpm-lock.yaml": true,
     "**/tmp": true,
     "**/yarn.lock": true
   },
 
   // Extension configs
   "emmet.showSuggestionsAsSnippets": true,
   "emmet.triggerExpansionOnTab": false,
   "errorLens.enabledDiagnosticLevels": [
     "warning",
     "error"
   ],
   "errorLens.excludeBySource": [
     "cSpell",
     "Grammarly",
     "eslint"
   ],
   // ESLint config: https://github.com/kirklin/eslint-config
   "eslint.codeAction.showDocumentation": {
     "enable": true
   },
   "eslint.quiet": true,
   "eslint.validate": [
     "javascript",
     "typescript",
     "javascriptreact",
     "typescriptreact",
     "vue",
     "html",
     "markdown",
     "json",
     "jsonc",
     "json5"
   ],
   "github.copilot.enable": {
     "*": true,
     "markdown": true,
     "plaintext": false,
     "yaml": false
   },
   "cSpell.allowCompoundWords": true,
   "cSpell.language": "en,en-US",
   "css.lint.hexColorLength": "ignore",
   "githubIssues.workingIssueFormatScm": "#${issueNumberLabel}",
   "githubPullRequests.fileListLayout": "tree",
   "gitlens.codeLens.authors.enabled": false,
   "gitlens.codeLens.enabled": false,
   "gitlens.codeLens.recentChange.enabled": false,
   "gitlens.menus": {
     "editor": {
       "blame": true,
       "clipboard": true,
       "compare": true,
       "history": false,
       "remote": false
     },
     "editorGroup": {
       "blame": true,
       "compare": false
     },
     "editorTab": {
       "clipboard": true,
       "compare": true,
       "history": true,
       "remote": true
     },
     "explorer": {
       "clipboard": true,
       "compare": true,
       "history": true,
       "remote": true
     },
     "scm": {
       "authors": true
     },
     "scmGroup": {
       "compare": true,
       "openClose": true,
       "stash": true
     },
     "scmGroupInline": {
       "stash": true
     },
     "scmItem": {
       "clipboard": true,
       "compare": true,
       "history": true,
       "remote": false,
       "stash": true
     }
   },
   "i18n-ally.autoDetection": false,
   "i18n-ally.displayLanguage": "en",
   "i18n-ally.ignoredLocales": [],
   "iconify.annotations": true,
   "iconify.inplace": true,
   "svg.preview.mode": "svg",
   "volar.autoCompleteRefs": false,
   "volar.codeLens.pugTools": false,
   "volar.codeLens.scriptSetupTools": true,
   "volar.completion.preferredTagNameCase": "pascal",
   "windicss.enableCodeFolding": false,
   "prettier.enable": false, // I only use Prettier for manually formatting
   "prettier.printWidth": 200,
   "prettier.semi": true,
   "prettier.singleQuote": false,
 
   // File Nesting
   // this might not be up to date with the repo, please check yourself
   // updated 2022-07-12 03:35
   // https://github.com/antfu/vscode-file-nesting-config
   "explorer.fileNesting.enabled": true,
   "explorer.fileNesting.expand": false,
   "explorer.fileNesting.patterns": {
     "*.asax": "$(capture).*.cs, $(capture).*.vb",
     "*.ascx": "$(capture).*.cs, $(capture).*.vb",
     "*.ashx": "$(capture).*.cs, $(capture).*.vb",
     "*.aspx": "$(capture).*.cs, $(capture).*.vb",
     "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",
     "*.c": "$(capture).h",
     "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx",
     "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
     "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx",
     "*.cshtml": "$(capture).cshtml.cs",
     "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
     "*.css": "$(capture).css.map, $(capture).*.css",
     "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx",
     "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
     "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
     "*.java": "$(capture).class",
     "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
     "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx",
     "*.master": "$(capture).*.cs, $(capture).*.vb",
     "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
     "*.pubxml": "$(capture).pubxml.user",
     "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
     "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
     "*.ts": "$(capture).js, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
     "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx",
     "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
     "*.vue": "$(capture).*.ts, $(capture).*.js",
     "*.xaml": "$(capture).xaml.cs",
     ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
     ".env": "*.env, .env.*, .envrc, env.d.ts",
     ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
     ".project": ".classpath",
     "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
     "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json",
     "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
     "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
     "cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
     "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
     "default.nix": "shell.nix",
     "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
     "dockerfile": ".dockerignore, docker-compose.*, dockerfile*",
     "flake.nix": "flake.lock",
     "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
     "gemfile": ".ruby-version, gemfile.lock",
     "go.mod": ".air*, go.sum",
     "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
     "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
     "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
     "package.json": ".browserslist*, .circleci*, .codecov, .commitlint*, .cz-config.js, .czrc, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lighthouserc.*, .lintstagedrc*, .markdownlint*, .mocha*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, api-extractor.json, apollo.config.*, appveyor*, ava.config.*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, cypress.*, dangerfile*, dprint.json, firebase.json, grunt*, gulp*, jasmine.*, jenkins*, jest.config.*, jsconfig.*, karma*, lerna*, lighthouserc.*, lint-staged*, nest-cli.*, netlify*, nodemon*, nx.*, package-lock.json, package.nls*.json, phpcs.xml, playwright.config.*, pm2.*, pnpm*, prettier*, pullapprove*, puppeteer.config.*, pyrightconfig.json, release-tasks.sh, renovate*, rollup.config.*, stylelint*, tsconfig.*, tsdoc.*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, vitest.config.*, webpack*, workspace.json, xo.config.*, yarn*",
     "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock",
     "pyproject.toml": ".pdm.toml, pdm.lock, pyproject.toml",
     "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
     "readme*": "authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors*",
     "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
     "rush.json": ".browserslist*, .circleci*, .codecov, .commitlint*, .cz-config.js, .czrc, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lighthouserc.*, .lintstagedrc*, .markdownlint*, .mocha*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, api-extractor.json, apollo.config.*, appveyor*, ava.config.*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, cypress.*, dangerfile*, dprint.json, firebase.json, grunt*, gulp*, jasmine.*, jenkins*, jest.config.*, jsconfig.*, karma*, lerna*, lighthouserc.*, lint-staged*, nest-cli.*, netlify*, nodemon*, nx.*, package-lock.json, package.nls*.json, phpcs.xml, playwright.config.*, pm2.*, pnpm*, prettier*, pullapprove*, puppeteer.config.*, pyrightconfig.json, release-tasks.sh, renovate*, rollup.config.*, stylelint*, tsconfig.*, tsdoc.*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, vitest.config.*, webpack*, workspace.json, xo.config.*, yarn*",
     "shims.d.ts": "*.d.ts",
     "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
     "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
     "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*"
   },

   "editor.tabSize": 4,
   "editor.insertSpaces": false,
   "editor.unicodeHighlight.nonBasicASCII": false,

/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
//* todo-------------------------------------------------------

   "editor.tokenColorCustomizations": {
    "[GitHub Dark]": {
      "textMateRules": [
      // verilog
      {
        "scope": "comment.line.double-slash.verilog",
        "settings": {
          "fontStyle": "italic"
        }
      },
      {
        "scope": "support.type.verilog,entity.name.type.define.verilog",
        "settings": {
          "foreground": "#79db7e",
          "fontStyle": "bold",
        }
      },
      {
        "scope": "entity.name.type.module.verilog", //函数和类的名称颜色
          "settings": {
            "foreground": "#1ad1bc",
            "fontStyle": "italic bold underline"
          },
      },
      {
        "scope": "storage.type.interface.verilog,storage.type.verilog",
        "settings": {
          "foreground": "#7bd5dc",
          "fontStyle": "italic"
        }
      },
      {
        "scope": "keyword.operator.comparison.verilog,keyword.operator.bitwise.verilog,keyword.other.verilog,keyword.operator.other.verilog,keyword.operator.logical.verilog,keyword.operator.arithmetic.verilog,keyword.operator.verilog",
        "settings": {
          "foreground": "#f0b681",
        }
      },
      {
        "scope": "support.function.port.implicit",
        "settings": {
          "foreground": "#eb8164e0",//eb8164e0
          "fontStyle": "italic"
        }
      },
      {
        "scope": "support.function.verilog,support.function.generic.verilog",
        "settings": {
          "foreground": "#8be9fd",
          "fontStyle": "bold"
        }
      },
      {
        "scope": "punctuation.definition.string.begin.verilog,string.quoted.double.verilog,punctuation.definition.string.end.verilog,constant.character.escape.verilog",
        "settings": {
          "foreground": "#becd5f",
        }
      },
      {
        "scope":"constant.other.net.verilog",
        "settings": {
          "foreground": "#48D1CC",//#48D1CC,80e666
          "fontStyle": "italic"
        }
      },
      {
        "scope": "constant.other.define.verilog,constant.other.verilog",
        "settings": {
          "foreground": "#dd61a9",
          "fontStyle": "italic"
        }
      },
      {
        "scope": "storage.module.verilog",
        "settings": {
          "foreground": "#67c46b",
          "fontStyle": "bold"
        }
      },
      {
        "scope":"entity.name.function.verilog",
        "settings":{
          "foreground":"#26c5b2",
          "fontStyle":"italic bold underline"
        }
      },
/////////markdown
      {
        "scope":"punctuation.definition.list.begin.markdown,markup.list.unnumbered.markdown,markup.list.numbered.markdown",
        "settings": {
          "foreground": "#70cec8",
        }
      },
      {
        "scope":"",
        "settings": {
          "foreground": "#9872a2",
        }
      },
      {
        "scope":"markup.bold.markdown,punctuation.definition.bold.markdown",
        "settings": {
          "foreground": "#57a6ff",
          "fontStyle": "bold"
        }
      },
      {
        "scope":"punctuation.definition.italic.markdown,markup.italic.markdown",
        "settings": {
          "foreground": "#57a6ff",
          "fontStyle": "italic bold"
        }
      },
      {
        "scope":"punctuation.definition.heading.markdown,entity.name.section.markdown",
        "settings": {
          "foreground": "#df7e6f",
          "fontStyle": "bold"
        }
      },
      {
        "scope":"entity.name.tag.html,punctuation.definition.tag.end.html,punctuation.definition.tag.begin.html,invalid.deprecated.html",
        "settings": {
          "foreground": "#dcd855",
        }  
      },
      {
        "scope":"constant.numeric.math.tex",
        "settings": {
          "foreground": "#a3e8ff",
        }
      },
      {
        "scope":"entity.name.function.math.tex,punctuation.definition.function.math.tex",
        "settings": {
          "foreground": "#c679c0",
        }
      },
      {
        "scope":"constant.character.math.tex,punctuation.definition.constant.math.tex",
        "settings": {
          "foreground": "#74bd85",
          "fontStyle": "bold"
        }
      },
////////vhdl
      {
        "scope":"entity.name.section.vhdl",
        "settings": {
          "foreground": "#ec7f6b",
        }
      },
      {
        "scope":"entity.name.type.vhdl",
        "settings": {
          "foreground": "#afd5e1",
        }
      },
      {
        "scope":"keyword.operator.vhdl",
        "settings": {
          "foreground": "#f0b681",
        }
      },
      {
        "scope":"entity.other.inherited-class.vhdl",
        "settings": {
          "foreground": "#dd61a9",
        }
      },
      {
        "scope":"keyword.reserved.vhdl",
        "settings": {
          "foreground": "#6ec5b9",
        }
      },
      {
        "scope":"string.quoted.double.vhdl,string.quoted.single.vhdl",
        "settings":{
          "foreground": "#7cafe3",
        }
      },
      {
        "scope":"support.function.ieee_std_logic_1164.vhdl",
        "settings": {
          "foreground": "#ba70d3",
        }
      },
      {
        "scope":"entity.name.constant.vhdl",
        "settings": {
          "foreground": "#e3dd8a",
        }
      },
      {
        "scope":"entity.name.tag.vhdl",
        "settings": {
          "foreground": "#f67286",
          "fontStyle": "italic"
        },
      },{
        "scope":"variable.annotation.vhdl",
        "settings": {
          "foreground": "#e4f16f",
        }
      },
      ]
    },
    "[Atom One Light]": {
      "textMateRules": [
        {
          "scope": "support.type.verilog,meta.module.inst.verilog,storage.module.verilog",
          "settings": {
            "fontStyle": "bold"
          },
        },
        {
          "scope": "storage.type.interface.verilog,storage.type.verilog",
          "settings": {
            "foreground": "#0095ff",
            "fontStyle": "italic"
          }
        },
        {
          "scope":"support.function.port.implicit.verilog",
          "settings": {
            "fontStyle": "italic"
          }
        },
        {
          "scope": "keyword.operator.comparison.verilog,keyword.operator.bitwise.verilog,keyword.operator.logical.verilog",
          "settings": {
            "foreground": "#ff7b00"
          }
        },
        {
          "scope": "entity.name.type.module.verilog",
          "settings": {
            "fontStyle": "italic bold underline"
          }
        },
        {
          "scope": "constant.other.verilog,constant.other.net.verilog",
          "settings": {
            "foreground": "#3fadb7",
            "fontStyle": "italic",
          },
        },
        {
          "scope": "meta.module.inst.verilog",
          "settings": {
            "fontStyle": ""
          }
        },
        {
          "scope": "keyword.other.verilog",
          "settings": {
            "foreground": "#ff7b00"
          }
        },
        {
          "scope":"constant.other.define.verilog",
          "settings": {
            "foreground": "#ff00c8",
          }
        },
        {
          "scope": "keyword.control.verilog",
          "settings": {
            "foreground": "#e60000"
          }
        },
        {
          "scope": "comment.line.double-slash.verilog",
          "settings": {
            "foreground": "#aeaeae",
            "fontStyle": "italic bold"
          }
        },
        {
          "scope": "constant.character.escape.verilog",
          "settings": {
            "foreground": "#50A14f"
          }
        }
      ],
    }
},
"TOOL.modelsim.install.path": "D:\\fpgatools\\modelsim__1\\win64\\modelsim.exe",
"workbench.colorTheme": "GitHub Dark",
"window.zoomLevel": -1,
 }
 